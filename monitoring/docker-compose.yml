version: '3.7'

services:
  cadvisor:
    image: gcr.io/google-containers/cadvisor:${CADVISER_VERSION}
    container_name: monitoring.cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    command:
      - '--storage_duration=15s'
    expose:
      - 8080
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"


  web:
    container_name: monitoring.web
    image: "deltation/devops-app-python"
    ports:
      - "5000:5000"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    networks:
      - monitoring.network
    logging:
      driver: "json-file"
      options:
        tag: "{{.ImageName}}|{{.Name}}"

  grafana:
    build:
      context: ./grafana
      args:
        - GRAFANA_VERSION=${GRAFANA_VERSION}
    container_name: monitoring.grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - VIRTUAL_HOST=monitoring.grafana
      - NETWORK_ACCESS=internal
      - VIRTUAL_PORT=3000
    restart: unless-stopped
    expose:
      - 3000
    ports:
      - "3000:3000"
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"

  promtail:
    image: grafana/promtail:${LOKI_VERSION}
    container_name: monitoring.promtail
    expose:
      - 9080
    ports:
      - "9080:9080"
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail-data:/var/lib/promtail/positions
      - ./promtail/promtail.yml:/etc/promtail/promtail.yml
    command:
      - '-config.file=/etc/promtail/promtail.yml'
    restart: unless-stopped
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"

  loki:
    container_name: monitoring.loki
    image: grafana/loki:${LOKI_VERSION}
    expose:
      - 3100
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki-config.yml:/etc/loki-config.yml
    command: -config.file=/etc/loki-config.yml
    restart: unless-stopped
    networks:
      - monitoring.network
    labels:
      org.label-schema.group: "monitoring"

networks:
  monitoring.network:
    ipam:
      driver: default

volumes:
  grafana-data: {}
  loki-data: {}
  promtail-data: {}